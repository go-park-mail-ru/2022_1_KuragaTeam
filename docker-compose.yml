version: "3.9"
services:
  postgres:
    image: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - APP_DB_USER=docker
      - APP_DB_PASS=docker
      - APP_DB_NAME=docker
    volumes:
      - ./sql/init.sh:/docker-entrypoint-initdb.d/init.sh
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - my-network
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - my-network
  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - minio_data:/data
    networks:
      - my-network
  authorization:
    build:
      context: .
      dockerfile: ./cmd/authorization/Dockerfile
    links:
      - postgres:postgres
      - redis:redis
    ports:
      - "5555:5555"
    networks:
      - my-network
  profile:
    build:
      context: .
      dockerfile: ./cmd/profile/Dockerfile
    links:
      - postgres:postgres
      - minio:minio
    ports:
      - "6666:6666"
    networks:
      - my-network
  main:
    build:
      context: .
      dockerfile: ./cmd/main/Dockerfile
    links:
      - postgres:postgres
      - redis:redis
      - minio:minio
      - authorization:authorization
      - profile:profile
    ports:
      - "1323:1323"
    networks:
      - my-network
  nginx:
    image: nginx:latest
    links:
      - main:main
      - minio:minio
    volumes:
      - ./nginx:/etc/nginx/conf.d
    ports:
      - "8000:80"
    networks:
      - my-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  my-network:
    driver: bridge