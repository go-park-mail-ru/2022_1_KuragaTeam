name: deploy

on:
  push:
    branches:
      - dev
      - KT-59_CI
  pull_request:
    branches:
      - dev
      - main

jobs:
  #  tests:
  #    name: Run tests
  #    runs-on: self-hosted
  #    steps:
  #      - name: Install Go
  #        uses: actions/setup-go@v2
  #        with:
  #          go-version: '1.18.x'
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #      - name: Run all tests
  #        run: make tests
  #
  #  linter:
  #    needs: tests
  #    name: Run linter
  #    runs-on: self-hosted
  #    steps:
  #      - name: Install Go
  #        uses: actions/setup-go@v2
  #        with:
  #          go-version: '1.17.x'
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #      - name: Run linter
  #        run: |
  #          export PATH=$PATH:$(go env GOPATH)/bin
  #          go get github.com/golangci/golangci-lint/cmd/golangci-lint
  #          make lint

  build:
    #    needs: linter
    name: Build Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push authorization
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/authorization/Dockerfile
          platforms: linux/arm64
          push: true
          tags: moviespace/authorization:latest
      - name: Build and push profile
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/profile/Dockerfile
          platforms: linux/arm64
          push: true
          tags: moviespace/profile:latest
      - name: Build and push movie
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/movie/Dockerfile
          platforms: linux/arm64
          push: true
          tags: moviespace/movie:latest
      - name: Build and push compilations
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/profile/Dockerfile
          platforms: linux/arm64
          push: true
          tags: moviespace/compilations:latest
      - name: Build and push main
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/main/Dockerfile
          platforms: linux/arm64
          push: true
          tags: moviespace/main:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: pull docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: rsync -a ./docker-compose-cd.yml ${{ secrets.TARGET_PATH }}
                  cd ${{ secrets.TARGET_PATH }} && sudo docker-compose -f docker-compose.yml pull
                  cd ${{ secrets.TARGET_PATH }} && sudo docker-compose -f docker-compose-cd.yml up --build -d