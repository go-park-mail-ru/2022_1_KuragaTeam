name: deploy

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
      - main

jobs:
    tests:
      name: Run tests
      runs-on: self-hosted
      steps:
        - name: Install Go
          uses: actions/setup-go@v2
          with:
            go-version: '1.18.x'
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Create env file
          run: touch .env; echo ${{ secrets.ENV_FILE }} >> .env;
        - name: Run all tests
          run: make tests

    linter:
      needs: tests
      name: Run linter
      runs-on: self-hosted
      steps:
        - name: Install Go
          uses: actions/setup-go@v2
          with:
            go-version: '1.18.x'
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Run linter
          run: |
            export PATH=$PATH:$(go env GOPATH)/bin
            go get github.com/golangci/golangci-lint/cmd/golangci-lint
            make lint

  build:
        needs: linter
    name: Build Docker
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create env file
        run: touch .env; echo ${{ secrets.ENV_FILE }} >> .env;
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push authorization
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/authorization/Dockerfile
          platforms: linux/amd64
          push: true
          tags: moviespace/authorization:latest
      - name: Build and push profile
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/profile/Dockerfile
          platforms: linux/amd64
          push: true
          tags: moviespace/profile:latest
      - name: Build and push movie
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/movie/Dockerfile
          platforms: linux/amd64
          push: true
          tags: moviespace/movie:latest
      - name: Build and push compilations
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/compilations/Dockerfile
          platforms: linux/amd64
          push: true
          tags: moviespace/compilations:latest
      - name: Build and push main
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/main/Dockerfile
          platforms: linux/amd64
          push: true
          tags: moviespace/main:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create env file
        run: touch .env; echo ${{ secrets.ENV_FILE }} >> .env;
      - name: Pull docker images
        run : |
          sudo docker-compose -f docker-compose-cd.yml pull
      - name: Run docker-compose
        run : |
          sudo docker-compose -f docker-compose-cd.yml up --build -d
      - name: Clear old images and containers
        run : |
          sudo docker container prune
          sudo docker image prune